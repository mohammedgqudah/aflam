{"version":3,"sources":["components/Player/Player.module.scss","App.module.scss","components/Home/Home.module.scss","actions/movies.js","components/Home/Home.js","constants.js","components/Player/Player.jsx","App.js","serviceWorker.js","store.js","reducers/movies.reducer.js","index.js"],"names":["module","exports","shared","getParameterByName","name","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","GET_MOVIE_URL","a","axios","get","then","res","data","iframe","key","video_id","ticket","console","log","router","push","Movie","this","props","movie","title","link","img","length","slice","className","styles","onClick","src","alt","React","Component","Home","connect","state","movies","onChange","target","setState","search","value","onKeyPress","query","dispatch","$","cheerio","load","list","filter","_i","i","map","find","attr","text","type","payload","toArray","loading","search_con","autoFocus","main","ext","rel","idx","Player","componentDidMount","e","temp","_key","frame","allowFullScreen","onLoad","ref","App","path","exact","render","history","match","params","Boolean","hostname","reducers","combineReducers","mw","applyMiddleware","reduxThunk","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11a75cc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Player_main__38grl\",\"frame\":\"Player_frame__H_140\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__EwjGr\",\"ext\":\"Home_ext__1gbaF\",\"search_con\":\"Home_search_con__3glCI\",\"main\":\"Home_main__13HyB\",\"movie\":\"Home_movie__qbgz4\",\"title\":\"Home_title__idnpY\"};","import axios from \"axios\";\nimport { SET_MOVIES_LIST } from \"../constants\";\nimport cheerio from \"cheerio\";\n\nlet shared = {};\nexport const SEARCH_MOVIES = query => {\n  return async dispatch => {\n    let res = await axios\n      .get(\n        `https://123tvstream.club/watch-the-dark-knight-full-movie-online-on-fmovies-9350.html`,\n      )\n      .then(res => res.data);\n    res = await axios\n      .get(`http://w.cima4u.tv/?s=${query}`)\n      .then(res => res.data);\n    let $ = cheerio.load(res);\n    let list = $(\"#dataTab .block\").map((_i, i) => {\n      return {\n        link: $(i)\n          .find(\"a\")\n          .attr(\"href\"),\n        title: $(i)\n          .find(\".boxtitle\")\n          .text(),\n        img: $(i)\n          .find(\".img1\")\n          .css(\"background-image\")\n          .replace(\"url(\", \"\")\n          .replace(\")\", \"\")\n          .replace(/\\\"/gi, \"\")\n      };\n    });\n    dispatch({ type: SET_MOVIES_LIST, payload: list.toArray() });\n  };\n};\nexport const SEARCH_MOVIES_NEW = query => {\n  return async dispatch => {\n    let res = await axios\n      .get(`https://123tvstream.club/search_movies?s=${query}`, shared)\n      .then(res => res.data);\n    let $ = cheerio.load(res);\n    let list = $(\".movie-list > *\")\n      .filter((_i, i) => {\n        return i.name === \"div\";\n      })\n      .map((_i, i) => {\n        return {\n          link: $(i)\n            .find(\"a\")\n            .attr(\"href\"),\n          title: $(i)\n            .find(\".name\")\n            .text(),\n          img: $(i)\n            .find(\"img\")\n            .attr(\"src\")\n        };\n      });\n    dispatch({ type: SET_MOVIES_LIST, payload: list.toArray() });\n  };\n};\nfunction getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return \"\";\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\nexport const GET_MOVIE_URL = async url => {\n  let res = await axios.get(url).then(res => res.data);\n  let iframe =\n    \"https://videospider\" + /https:\\/\\/videospider([^\"]+)\"/.exec(res)[1];\n  const key = getParameterByName(\"key\", iframe);\n  const video_id = getParameterByName(\"video_id\", iframe);\n  const ticket = getParameterByName(\"ticket\", iframe);\n  console.log(key);\n  // let $ = cheerio.load(res);\n  // let next = $(\".leftDetails a\").attr(\"href\");\n  // res = await axios.get(next).then(res => res.data);\n  // window.router.push(\n  // \t`/movie/${next\n  // \t\t.split(\"/\")\n  // \t\t.pop()\n  // \t\t.replace(\".html\", \"\")}`\n  // );\n  window.router.push(`/movie/${key}/${video_id}/${ticket}`);\n};\n","import React, { Component } from \"react\";\nimport styles from \"./Home.module.scss\";\nimport { connect } from \"react-redux\";\nimport {\n  SEARCH_MOVIES,\n  GET_MOVIE_URL,\n  SEARCH_MOVIES_NEW\n} from \"../../actions/movies\";\n\nclass Movie extends React.Component {\n  render() {\n    let { title, link, img } = this.props.movie;\n    title = title.length > 30 ? title.slice(0, 30) + \"...\" : title;\n    return (\n      <div\n        className={styles.movie}\n        onClick={() => {\n          GET_MOVIE_URL(link);\n        }}\n      >\n        <img src={img} alt=\"cover\" />\n        <span className={styles.title}>{title}</span>\n      </div>\n    );\n  }\n}\n@connect(state => ({ movies: state.movies }))\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = { search: \"\" };\n  }\n  onChange = ({ target }) => {\n    this.setState({ search: target.value });\n  };\n  onKeyPress = ({ key }) => {\n    let { search } = this.state;\n    if (key === \"Enter\") {\n      this.props.dispatch(SEARCH_MOVIES_NEW(search));\n    }\n  };\n  render() {\n    let { search } = this.state;\n    let { movies } = this.props;\n    let { loading, list } = movies;\n    return (\n      <div className={styles.Home}>\n        <div className={styles.search_con}>\n          <input\n            autoFocus\n            type=\"text\"\n            value={search}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n          />\n        </div>\n        <div className={styles.main}>\n          <a\n            className={styles.ext}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n            href=\"https://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf?hl=en\"\n          >\n            download the proxy extension first\n          </a>\n          {loading ? (\n            <div>loading...!</div>\n          ) : (\n            list.map((i, idx) => <Movie key={idx} movie={i} />)\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","export const SET_MOVIES_LIST = \"SET_MOVIES_LIST\";","import React from \"react\";\nimport styles from \"./Player.module.scss\";\nclass Player extends React.Component {\n\tcomponentDidMount = () => {\n\t\tconsole.log(\"===============\");\n\t\tconsole.log(this.e);\n\t\twindow.temp = this.e;\n\t};\n\trender() {\n\t\tlet { _key, video_id, ticket } = this.props;\n\t\tlet url = `https://videospider.stream/getvideo?key=${_key}&video_id=${video_id}&ticket=${ticket}`;\n\t\treturn (\n\t\t\t<div className={styles.main}>\n\t\t\t\t<iframe\n\t\t\t\t\tclassName={styles.frame}\n\t\t\t\t\tsrc={url}\n\t\t\t\t\ttitle=\"ye\"\n\t\t\t\t\tallowFullScreen\n\t\t\t\t\tonLoad={this.onLoad}\n\t\t\t\t\tref={e => (this.e = e)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t// <embed src={url} width=\"600\" height=\"400\" ref={e => (this.e = e)}></embed>\n\t\t);\n\t}\n}\n\nexport default Player;\n","import React from \"react\";\nimport styles from \"./App.module.scss\";\nimport Home from \"./components/Home/Home.js\";\nimport Player from \"./components/Player/Player.jsx\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n\treturn (\n\t\t<div className={styles.App}>\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\trender={({ history }) => {\n\t\t\t\t\t\t\twindow.router = history;\n\t\t\t\t\t\t\treturn <Home />;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/movie/:key/:video_id/:ticket\"\n\t\t\t\t\t\trender={({ match }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Player\n\t\t\t\t\t\t\t\t\t_key={match.params.key}\n\t\t\t\t\t\t\t\t\tvideo_id={match.params.video_id}\n\t\t\t\t\t\t\t\t\tticket={match.params.ticket}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport moviesReducer from \"./reducers/movies.reducer.js\";\nimport reduxThunk from \"redux-thunk\";\n\nlet reducers = combineReducers({ movies: moviesReducer });\nlet mw = applyMiddleware(reduxThunk);\nconst store = createStore(reducers, {}, mw);\nwindow.store = store;\n\nexport default store;\n","import { SET_MOVIES_LIST } from \"../constants\";\n\nexport default (movies = { loading: true, list: [] }, { payload, type }) => {\n  switch (type) {\n    case SET_MOVIES_LIST: {\n      return { ...movies, loading: false, list: payload };\n    }\n    default: {\n      return { ...movies };\n    }\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}